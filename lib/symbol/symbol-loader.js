/* jshint node: true, esversion: 6 */
'use strict';

var fs = require('fs');

/**
 * A class to load the text symbol file generated by aapt with the
 * --output-text-symbols option.
 *
 * JS port of the same class from the Android Gradle plugin
 *
 * @see https://android.googlesource.com/platform/tools/build/+/master/builder/src/main/java/com/android/builder/internal/SymbolLoader.java
 */
class SymbolLoader {
  /**
   * Constructs this SymbolLoader
   *
   * @param {String} symbolPathAndFilename Full path to the R.txt that should be loaded
   */
  constructor(symbolPathAndFilename) {
    this.symbolPathAndFilename = symbolPathAndFilename;
    this.symbols = {};
  }

  /**
   * Loads all symbols from the R.txt
   */
  load() {
    var rSymbolFileLines = fs.readFileSync(this.symbolPathAndFilename).toString().split('\n');
    var lineIndex = 0;
    rSymbolFileLines.forEach((line) => {
      lineIndex++;

      if (line.length === 0) {
        return;
      }

      var pos = line.indexOf(' ');
      var type = line.substring(0, pos);
      var pos2 = line.indexOf(' ', pos + 1);
      var className = line.substring(pos + 1, pos2);
      var pos3 = line.indexOf(' ', pos2 + 1);
      var name = line.substring(pos2 + 1, pos3);
      var value = line.substring(pos3 + 1);
      if (!name || !type || !value) {
        throw new Error('File format error reading ' + this.symbolPathAndFilename + '\tline ' + lineIndex + ': ' + line);
      }

      this.symbols[className] = this.symbols[className] || {};
      var resourceClassEntries = this.symbols[className];
      resourceClassEntries[name] = {name: name, type: type, value: value};
    });
  }
}

module.exports = SymbolLoader;
